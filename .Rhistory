install.packages("googlesheets4")
?googlesheets4::read_sheet
recipes_sheet = "https://docs.google.com/spreadsheets/d/19CAAiLIdBZdaoN2sUOtj8maHS6Fuab13lsGDP7RMaBg/edit#gid=0"
recipe = googlesheets4::read_sheet(recipes_sheet, sheet = "recipe")
step = googlesheets4::read_sheet(recipes_sheet, sheet = "step")
step = googlesheets4::read_sheet(recipes_sheet, sheet = "step")
recipe
usethis::use_data(recipe, overwrite = TRUE)
usethis::use_data(recipe, overwrite = TRUE)
usethis::use_data(recipe, overwrite = TRUE)
devtools::load_all(); run_app()
devtools::load_all(); run_app()
usethis::use_import_from("stringr","str_c")
devtools::load_all(); run_app()
devtools::load_all(); run_app()
recipe
devtools::load_all(); run_app()
recipes_sheet = "https://docs.google.com/spreadsheets/d/19CAAiLIdBZdaoN2sUOtj8maHS6Fuab13lsGDP7RMaBg/edit#gid=0"
recipes_sheet = "https://docs.google.com/spreadsheets/d/19CAAiLIdBZdaoN2sUOtj8maHS6Fuab13lsGDP7RMaBg/edit#gid=0"
recipes_sheet = "https://docs.google.com/spreadsheets/d/19CAAiLIdBZdaoN2sUOtj8maHS6Fuab13lsGDP7RMaBg/edit#gid=0"
recipe = googlesheets4::read_sheet(recipes_sheet, sheet = "recipe")
step = googlesheets4::read_sheet(recipes_sheet, sheet = "step")
ingredient = googlesheets4::read_sheet(recipes_sheet, sheet = "ingredient")
usethis::use_data(recipe, overwrite = TRUE)
usethis::use_data(step, overwrite = TRUE)
usethis::use_data(ingredient, overwrite = TRUE)
recipe
recipe %>% pull(recipe_name)
library(tidyverse)
recipe %>% pull(recipe_name)
recipe = googlesheets4::read_sheet(recipes_sheet, sheet = "recipe") %>% filter(!is.na(recipe_name))
usethis::use_data(recipe, overwrite = TRUE)
devtools::load_all(); run_app()
devtools::load_all(); run_app()
recipe
step
step %>% semi_join(recipe, by ="recipe_id") %>% arrange(step_num) %>% pull
library(shiny)
ui <- fluidPage(
tags$ul(
uiOutput('list')
)
)
server <- function(input, output, session) {
df <- data.frame(item = c('item 1', 'item 2', 'item 3'), num = c(2,3,4))
output$list <- renderUI({
apply(df, 1, function(x) tags$li(x['item'], "The SCORE IS: ", x['num']))
})
}
shinyApp(ui, server)
df <- data.frame(item = c('item 1', 'item 2', 'item 3'), num = c(2,3,4))
apply(df, 1, function(x) tags$li(x['item'], "The SCORE IS: ", x['num']))
?apply
?tags$li
?tags
library(shiny)
ui <- fluidPage(
tags$ul(
uiOutput('list')
)
)
server <- function(input, output, session) {
df <- data.frame(item = c('item 1', 'item 2', 'item 3'), num = c(2,3,4))
output$list <- renderUI({
apply(df, 1, function(x) tags$li(paste(x['item'], "The SCORE IS: ", x['num'])))
})
}
shinyApp(ui, server)
?b
?shiny::b
?shiny::stepb
step
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
step %>% mutate(
txt = str_c(tags$b(row_number()),': ', step_description)
) %>%
pull(txt) %>%
tags$li
step %>% mutate(
txt = str_c(tags$b(row_number()),': ', step_description)
) %>%
pull(txt)
step %>% %>%
step %>%
pull(step_description) %>%
tags$li
tags$li(step %>%
pull(step_description))
step %>%
pull(step_description) %>%
lapply(tags$li)
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
?h1
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
Q()
q()
devtools::load_all(); run_app()
usethis::use_import_from('magrittr','%>%')
devtools::load_all(); run_app()
usethis::use_import_from('dplyr','pull')
devtools::load_all(); run_app()
?dplyr::pull()
?dplyr::arrange
usethis::use_import_from('dplyr','arrange')
usethis::use_import_from('dplyr','semi_join')
usethis::use_import_from('dplyr','filter')
devtools::load_all(); run_app()
devtools::load_all(); run_app()
raw_to_int32 <- function(raw_data) {
# Convert raw data to a 32-bit signed integer
int32_value <- bitwShiftL(raw_data[1], 24) +
bitwShiftL(raw_data[2], 16) +
bitwShiftL(raw_data[3], 8) +
raw_data[4]
# Check if the integer is negative
if (bitwAnd(int32_value, 2^31) != 0) {
# Convert to negative 32-bit integer
int32_value <- int32_value - 2^32
}
return(int32_value)
}
raw_data <- as.raw(c(0xFF, 0xFF, 0xFF, 0xFF))
# Convert raw data to a 32-bit signed integer
int32_value <- raw_to_int32(raw_data)
install.packages("blogdown")
q()
library(blogdown)
q()
q()
recipes_sheet = "https://docs.google.com/spreadsheets/d/19CAAiLIdBZdaoN2sUOtj8maHS6Fuab13lsGDP7RMaBg/edit#gid=0"
recipes_sheet = "https://docs.google.com/spreadsheets/d/19CAAiLIdBZdaoN2sUOtj8maHS6Fuab13lsGDP7RMaBg/edit#gid=0"
recipes_sheet = "https://docs.google.com/spreadsheets/d/19CAAiLIdBZdaoN2sUOtj8maHS6Fuab13lsGDP7RMaBg/edit#gid=0"
recipes_sheet = "https://docs.google.com/spreadsheets/d/19CAAiLIdBZdaoN2sUOtj8maHS6Fuab13lsGDP7RMaBg/edit#gid=0"
recipe = googlesheets4::read_sheet(recipes_sheet, sheet = "recipe") %>% filter(!is.na(recipe_name))
step = googlesheets4::read_sheet(recipes_sheet, sheet = "step")
devtools::load_all()
recipe = googlesheets4::read_sheet(recipes_sheet, sheet = "recipe") %>% filter(!is.na(recipe_name))
step = googlesheets4::read_sheet(recipes_sheet, sheet = "step")
ingredient = googlesheets4::read_sheet(recipes_sheet, sheet = "ingredient")
usethis::use_data(recipe, overwrite = TRUE)
usethis::use_data(step, overwrite = TRUE)
usethis::use_data(ingredient, overwrite = TRUE)
run_app()
devtools::load_all()
step
r = step %>% filter(recipe_id == '2')
r
devtools::load_all(); run_app()
r = step %>% filter(recipe_id == '2')
r %>% arrange(step_num) %>%
str_c(step_line(step_description), collapse='')
step_line <- function(step_description) {
str_glue('<li>{step_description}</li>')
}
r %>% arrange(step_num) %>%
str_c(step_line(step_description), collapse='')
usethis::use_import_from("stringr","str_glue")
r %>% arrange(step_num) %>%
str_c(step_line(step_description), collapse='')
r
r %>% arrange(step_num) %>%
summarise(str_c(step_line(step_description), collapse=''))
usethis::use_import_from("dplyr","summarise")
r %>% arrange(step_num) %>%
summarise(str_c(step_line(step_description), collapse=''))
r %>% group_by(recipe_id)
usethis::use_import_from("dplyr","group_by")
r %>% group_by(recipe_id)
step %>% group_by(recipe_id)
step
step %>% group_by(recipe_id)
step %>% arrange(step_num) %>%
group_by(recipe_id) %>%
summarise(
recipe_html = str_c(step_line(step_description), collapse='')
)
step %>%
group_by(recipe_id) %>%
arrange(step_num) %>%
summarise(
recipe_html = str_c(step_line(step_description), collapse='')
)
step_line <- function(step_description) {
str_glue('<li>{step_description}</li>')
}
step_line <- function(step_description) {
str_glue('<li>{step_description}</li>')
}
str_glue('<li>{step_description}</li>')
step_line <- function(step_description) {
str_glue('<li>{step_description}</li>')
}
step_line <- function(step_description) {
str_glue('<li>{step_description}</li>')
}
recipes_html = step %>%
group_by(recipe_id) %>%
arrange(step_num) %>%
summarise(
recipe_html = str_c(step_line(step_description), collapse='')
)
usethis::use_data(recipes_html, overwrite=T)
devtools::load_all(); run_app()
HTML(fluid_page_head_style())
devtools::load_all(); run_app()
starting_text = str_glue(
'Weeknight dinner recipes should be easy and delicious. These recipes were',
'curated from {url("Food Network", "https://www.foodnetwork.com/")}',
'{url("NYTimes", "https://cooking.nytimes.com/")}',
'{url("Better Homes and Gardens", "https://www.bhg.com/recipes/")}',
'and elsewhere.',
'<br>',
'I made this app to make it easier for me to do my weekly grocery shopping',
'and make a weekly dinner list. Too often, I have missed ingredients, or',
'realized too late I have prepared for chicken three nights in a row.',
'This app lets me curate a weekly menu quickly and easily, choosing from a',
'selection of all of our favorite recipes.',
'<br>',
'I hope you find this tool easy to use and find some good recipes!',
'Suggestions are welcome! Please send any to coldenjohanson@gmail.com.'
)
url <- function(text, link) {
str_glue('<a href="{link}">{text}</a>')
}
url <- function(text, link) {
str_glue('<a href="{link}">{text}</a>')
}
starting_text = str_glue(
'Weeknight dinner recipes should be easy and delicious. These recipes were',
'curated from {url("Food Network", "https://www.foodnetwork.com/")}',
'{url("NYTimes", "https://cooking.nytimes.com/")}',
'{url("Better Homes and Gardens", "https://www.bhg.com/recipes/")}',
'and elsewhere.',
'<br>',
'I made this app to make it easier for me to do my weekly grocery shopping',
'and make a weekly dinner list. Too often, I have missed ingredients, or',
'realized too late I have prepared for chicken three nights in a row.',
'This app lets me curate a weekly menu quickly and easily, choosing from a',
'selection of all of our favorite recipes.',
'<br>',
'I hope you find this tool easy to use and find some good recipes!',
'Suggestions are welcome! Please send any to coldenjohanson@gmail.com.'
)
starting_text
starting_text = str_glue(sep=' ',
'Weeknight dinner recipes should be easy and delicious. These recipes were',
'curated from {url("Food Network", "https://www.foodnetwork.com/")}',
'{url("NYTimes", "https://cooking.nytimes.com/")}',
'{url("Better Homes and Gardens", "https://www.bhg.com/recipes/")}',
'and elsewhere.',
'<br>',
'I made this app to make it easier for me to do my weekly grocery shopping',
'and make a weekly dinner list. Too often, I have missed ingredients, or',
'realized too late I have prepared for chicken three nights in a row.',
'This app lets me curate a weekly menu quickly and easily, choosing from a',
'selection of all of our favorite recipes.',
'<br>',
'I hope you find this tool easy to use and find some good recipes!',
'Suggestions are welcome! Please send any to coldenjohanson@gmail.com.'
)
starting_text
devtools::load_all(); run_app()
?selectInput
devtools::load_all(); run_app()
rcipe_palette['cultured'])
rcipe_palette['cultured']
devtools::load_all(); run_app()
devtools::load_all(); run_app()
install.packages("shinyjs")
devtools::load_all(); run_app()
devtools::load_all(); run_app()
rcipe_palette['russet']
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
rcipe_palette['earth-yellow']
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
rcipe_palette['earth-yellow']
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
devtools::load_all(); run_app()
?renderUI
devtools::load_all(); run_app()
q()
